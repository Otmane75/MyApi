{"apiVersion": "0.1", "swaggerVersion": "1.2", "basePath": "http://127.0.0.1:5000", "spec_endpoint_path": "/api/spec", "resourcePath": "/", "produces": ["application/json", "text/html"], "description": " API PFE", "models": {"getConta": {"id": "getConta", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "required": [], "properties": {}}, "manCert": {"id": "manCert", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "required": [], "properties": {}}, "operations": {"id": "operations", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "required": [], "properties": {}}, "Verification": {"id": "Verification", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "required": [], "properties": {}}, "ModelWithResourceFields": {"id": "ModelWithResourceFields", "description": null, "notes": null, "properties": {"a_string": {"type": "string"}}}, "TodoItemWithResourceFields": {"id": "TodoItemWithResourceFields", "description": "This is an example of how Output Fields work", "notes": "(http://flask-restful.readthedocs.org/en/latest/fields.html).<br/>Output Fields lets you add resource_fields to your model in which you specify<br/>the output of the model when it gets sent as an HTTP response.<br/>flask-restful-swagger takes advantage of this to specify the fields in<br/>the model", "required": ["a_string"], "properties": {"a_string": {"type": "string"}, "a_formatted_string": {"type": "string"}, "an_int": {"type": "integer"}, "a_bool": {"type": "boolean"}, "a_url": {"type": "string"}, "a_float": {"type": "number"}, "an_float_with_arbitrary_precision": {"type": "number"}, "a_fixed_point_decimal": {"type": "number"}, "a_datetime": {"type": "date-time"}, "a_list_of_strings": {"type": "array", "items": {"$ref": "string"}}, "a_nested_attribute": {"type": "ModelWithResourceFields"}, "a_list_of_nested_types": {"type": "array", "items": {"$ref": "ModelWithResourceFields"}}}}}, "apis": [{"path": "/contacts", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Lire les contacts"}, {"method": "post", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Lire Certificat d'un contact sp\u00e9cifique"}]}, {"path": "/csr", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "put", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Ajout du nouveau contact"}, {"method": "post", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Signature du certificat"}]}, {"path": "/operations", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Lire les Operations (Historique)"}, {"method": "post", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Syncronisation de l'historique"}]}, {"path": "/verify", "description": "Represents an abstract RESTful resource. Concrete resources should", "notes": "extend from this class and expose methods for each supported HTTP<br/>method. If a resource is invoked with an unsupported HTTP method,<br/>the API will return a response with status 405 Method Not Allowed.<br/>Otherwise the appropriate method is called and passed all arguments<br/>from the url rule used when adding the resource to an Api instance. See<br/>:meth:`~flask_restful.Api.add_resource` for details.", "operations": [{"method": "get", "parameters": [], "nickname": "nickname", "summary": null, "notes": "Page de l'application web (v\u00e9rification de signature)"}, {"method": "post", "parameters": [], "nickname": "nickname", "summary": null, "notes": "V\u00e9rification du PDF"}]}]}
